{"version":3,"sources":["app.js","card/card.js","foundation/foundation.js","stock/stock.js","pile/pile.js","waste/waste.js"],"names":["app","angular","module","controller","Stock","Foundation","Waste","Pile","Card","$scope","vm","this","numberOfFoundations","numberOfPiles","sampleCard","cardId","cardLookup","rank","minRank","maxRank","suits","forEach","suit","push","undefined","cardsToDeal","_","shuffle","slice","piles","Array","i","splice","stock","waste","foundations","$on","event","data","bin","parsed","split","dropObject","dropId","parseInt","binObject","binId","card","maybeAddCards","location","maybeRemoveCards","$apply","length","move","cards","directive","link","scope","element","attrs","on","$emit","id","$","draggable","revert","zIndex","faceUp","shortName","replace","restrict","templateUrl","factory","prototype","isRed","name","toLowerCase","lock","foundation","onMove","pop","onReturn","droppable","drop","ui","attr","reverse","$document","drawCard","bind","$event","key","preventDefault","faceDownCards","pile","revealCard","cardIndex","indexOf","cardsMeetPileCriteria","concat"],"mappings":"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","file":"main.min.js","sourcesContent":["(function(){\n    var app = angular.module('solitaire', [\n        'card',\n        'foundation',\n        'stock',\n        'templates',\n        'waste',\n        'pile'\n    ]);\n\n    app.controller('SolitaireGameController', [\n        'Stock',\n        'Foundation',\n        'Waste',\n        'Pile',\n        'Card',\n        '$scope',\n        function(Stock, Foundation, Waste, Pile, Card, $scope) {\n        var vm = this;\n\n        var numberOfFoundations = 4;\n        var numberOfPiles = 7;\n\n        var sampleCard = new Card();\n        var cardId = 0;\n        vm.cardLookup = [];\n        for (var rank = sampleCard.minRank; rank <= sampleCard.maxRank; rank++) {\n            sampleCard.suits.forEach(function(suit) {\n                vm.cardLookup.push(new Card(rank, suit, cardId, undefined));\n                cardId++;\n            });\n        }\n\n        var cardsToDeal = _.shuffle(vm.cardLookup.slice());\n\n        vm.piles = new Array(numberOfPiles);\n        for (i = 0; i < numberOfPiles; i++) {\n            vm.piles[i] = new Pile(cardsToDeal.splice(0, i + 1), i);\n        }\n\n        //for now, all 52 cards go to the stock\n        vm.stock = new Stock(cardsToDeal);\n        vm.waste = new Waste();\n\n        vm.foundations = new Array(numberOfFoundations);\n        for (var i = 0; i < numberOfFoundations; i++) {\n            vm.foundations[i] = new Foundation(i);\n        }\n\n        $scope.$on('cardDrop', function(event, data, bin) {\n            var parsed = data.split('-');\n            var dropObject = parsed[0];\n            var dropId = parseInt(parsed[1]);\n\n            parsed = bin.split('-');\n            var binObject = parsed[0];\n            var binId = parseInt(parsed[1]);\n\n            if (dropObject != 'card') {\n                throw \"Invalid drop\";\n            }\n\n            var card = vm.cardLookup[dropId];\n\n            switch (binObject) {\n                case 'foundation':\n                    vm.foundations[binId].maybeAddCards(card.location.maybeRemoveCards(card));\n                    break;\n                case 'pile':\n                    vm.piles[binId].maybeAddCards(card.location.maybeRemoveCards(card));\n                    break;\n                default:\n                    throw \"Invalid drop\";\n            }\n\n            $scope.$apply();\n        });\n\n        $scope.$on('cardDoubleClick', function(event, cardId) {\n            var card = vm.cardLookup[cardId];\n            for (var i = 0; i < vm.foundations.length; i++) {\n                if (vm.foundations[i].maybeAddCards(card.location.maybeRemoveCards(card))) {\n                    break;\n                }\n            }\n            $scope.$apply();\n        });\n\n        $scope.$on('drawCard', function(event, cardId) {\n            // draw a card if there are cards left\n            if (cardId === 'EMPTY') {\n                var move = vm.waste.maybeRemoveCards(vm.waste.cards[0]);\n                vm.stock.maybeAddCards(move);\n            }\n            // otherwise, move all of waste cards back to stock\n            else {\n                var card = vm.cardLookup[cardId];\n                vm.waste.maybeAddCards(card.location.maybeRemoveCards(card));\n            }\n\n            $scope.$apply();\n        });\n    }]);\n})();\n","(function(){\n    var app = angular.module('card', [ ]);\n\n    app.directive('card', function() {\n\n        var link = function(scope, element, attrs) {\n            element.on('dblclick', function(event) {\n                scope.$emit('cardDoubleClick', scope.card.id);\n            });\n\n            $(element).draggable({\n                revert: true,\n                zIndex: 10\n            });\n\n            scope.class = function() {\n                return scope.card.faceUp\n                    ? scope.card.shortName()\n                    : 'pcard-back';\n            }\n        };\n\n        return {\n            link: link,\n            replace: true,\n            restrict: 'E',\n            scope: {\n                card: '='\n            },\n            templateUrl: 'app/card/card.html'\n        };\n    });\n\n    app.factory('Card', function() {\n        var Card = function(rank, suit, id, location) {\n            this.rank = rank;\n            this.suit = suit;\n            this.id = id;\n            this.location = location;\n            this.faceUp = true;\n        };\n\n        Card.prototype.isRed = function() {\n            return this.suit == 'D' || this.suit == 'H';\n        };\n\n        Card.prototype.minRank = 1;\n        Card.prototype.maxRank = 13;\n        Card.prototype.suits = ['C', 'D', 'H', 'S'];\n\n        Card.prototype.shortName = function() {\n            var name = 'pcard-';\n            switch (this.rank) {\n                case 1:\n                    name += 'A';\n                    break;\n                case 11:\n                    name += 'J';\n                    break;\n                case 12:\n                    name += 'Q';\n                    break;\n                case 13:\n                    name += 'K';\n                    break;\n                default:\n                    name += this.rank;\n            }\n            name += this.suit;\n            return name.toLowerCase();\n        }\n\n        return Card;\n    });\n})();\n","(function(){\n    var app = angular.module('foundation', [ ]);\n\n    app.factory('Foundation', function() {\n        var Foundation = function(id) {\n            this.cards = [];\n            this.id = id;\n            this.lock = false;\n        };\n\n        Foundation.prototype.maybeRemoveCards = function(card) {\n            var foundation = this;\n            if (foundation.lock) {\n                throw \"Foundation waiting for card removal to be completed.\";\n            }\n\n            if (card == foundation.cards[foundation.cards.length - 1]) {\n                foundation.lock = true;\n                return {\n                    cards: [foundation.cards[foundation.cards.length - 1]],\n                    onMove: function() {\n                        foundation.cards.pop();\n                        foundation.lock = false;\n                    },\n                    onReturn: function() {\n                        foundation.lock = false;\n                    }\n                }\n            }\n            else {\n                return {\n                    cards: [],\n                    onMove: function() {},\n                    onReturn: function() {}\n                }\n            }\n        }\n\n        Foundation.prototype.maybeAddCards = function(move) {\n            if (move.cards.length === 1\n                && (\n                    (this.cards.length === 0\n                        && move.cards[0].rank === move.cards[0].minRank)\n                    || (this.cards.length > 0\n                        && move.cards[0].rank === this.cards[this.cards.length - 1].rank + 1\n                        && move.cards[0].suit === this.cards[this.cards.length - 1].suit))) {\n                this.cards.push(move.cards[0]);\n                move.cards[0].location = this;\n                move.onMove();\n                return true;\n            }\n            else {\n                move.onReturn();\n                return false;\n            }\n        }\n\n        return Foundation;\n    });\n\n    app.directive('foundation', function() {\n        var link = function(scope, element, attrs) {\n            $(element).droppable({\n                drop: function(event, ui) {\n                    scope.$emit('cardDrop', ui.draggable.attr(\"id\"),\n                        \"foundation-\" + scope.foundation.id);\n                }\n            });\n        };\n\n        return {\n            link: link,\n            replace: true,\n            restrict: 'E',\n            scope: {\n                foundation: '=',\n                drop: '&'\n            },\n            templateUrl: 'app/foundation/foundation.html'\n        };\n    });\n})();\n","(function() {\n    var app = angular.module('stock', ['card']);\n\n    app.factory('Stock', ['Card', function(Card) {\n        var Stock = function(cards) {\n            var stock = this;\n            //end of array is top of stock\n            stock.cards = cards.slice();\n            stock.cards.forEach(function(card) {\n                card.location = stock;\n            });\n            stock.lock = false;\n        };\n\n        Stock.prototype.maybeRemoveCards = function(card) {\n            var stock = this;\n            if (stock.lock) {\n                throw \"stock waiting for card removal to be completed.\";\n            }\n\n            var move = {\n                cards: [],\n                onMove: function() {},\n                onReturn: function() {}\n            };\n\n            if (card === this.cards[this.cards.length - 1]) {\n                stock.lock = true;\n                move.cards.push(stock.cards[stock.cards.length - 1]);\n                move.onMove = function() {\n                    stock.cards.pop();\n                    stock.lock = false;\n                };\n                move.onReturn = function() {\n                    stock.lock = false;\n                }\n            }\n\n            return move;\n        }\n\n        Stock.prototype.maybeAddCards = function(move) {\n            var stock = this;\n\n            if (stock.cards.length === 0\n                && move.cards.length > 0) {\n                stock.cards = move.cards.slice().reverse();\n                stock.cards.forEach(function(card) {\n                    card.location = stock;\n                })\n                move.onMove();\n                return true;\n            }\n            else {\n                move.onReturn();\n                return false;\n            }\n        }\n\n        return Stock;\n    }]);\n\n    app.directive('stock', ['$document', function($document) {\n\n\n        var link = function(scope, element, attrs) {\n            function drawCard() {\n                var cards = scope.stock.cards;\n                scope.$emit('drawCard', cards.length > 0\n                    ? cards[cards.length - 1].id\n                    : 'EMPTY');\n            }\n\n            $document.bind('keydown', function($event) {\n                if ($event.key === ' ') {\n                    drawCard();\n                    $event.preventDefault();\n                }\n            });\n            element.on('click', drawCard);\n        };\n\n        return {\n            link: link,\n            replace: true,\n            restrict: 'E',\n            scope: {\n                stock: '='\n            },\n            templateUrl: 'app/stock/stock.html'\n        };\n    }]);\n})();\n","(function() {\n    var app = angular.module('pile', ['card']);\n\n    app.factory('Pile', ['Card', function(Card) {\n        var sampleCard = new Card();\n\n        var Pile = function(faceDownCards, id) {\n            var pile = this;\n\n            if (faceDownCards) {\n                pile.faceDownCards = faceDownCards.slice();\n                pile.faceDownCards.forEach(function(card) {\n                    card.location = pile;\n                    card.faceUp = false;\n                });\n            }\n            else {\n                pile.faceDownCards = [];\n            }\n\n            pile.cards = [];\n            pile.id = id;\n            pile.lock = false;\n\n            pile.revealCard();\n        };\n\n        Pile.prototype.revealCard = function() {\n            if (this.faceDownCards.length > 0 && this.cards.length === 0) {\n                var card = this.faceDownCards.pop();\n                card.faceUp = true;\n                this.cards.push(card);\n            }\n        }\n\n        Pile.prototype.maybeRemoveCards = function(card) {\n            var pile = this;\n\n            if (pile.lock) {\n                throw \"pile waiting for card removal to be completed.\";\n            }\n\n            var move = {\n                cards: [],\n                onMove: function() {},\n                onReturn: function() {}\n            };\n\n            var cardIndex = pile.cards.indexOf(card);\n\n            if (cardIndex >= 0) {\n                pile.lock = true;\n                move.cards = pile.cards.slice(cardIndex, pile.cards.length);\n                move.onMove = function() {\n                    if (cardIndex === 0) {\n                        pile.cards = [];\n                    }\n                    else {\n                        pile.cards = pile.cards.slice(0, cardIndex);\n                    }\n                    pile.lock = false;\n                };\n                move.onReturn = function() {\n                    pile.lock = false;\n                }\n            }\n\n            return move;\n        }\n\n        var cardsMeetPileCriteria = function(cards) {\n            if (cards.length <= 1) {\n                return true;\n            }\n            else {\n                for (var i = 1; i < cards.length; i++) {\n                    if (\n                        (cards[i].isRed()\n                            ? !cards[i - 1].isRed()\n                            : cards[i - 1].isRed())\n                        && (cards[i].rank === (cards[i - 1].rank - 1))) {\n                        continue;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                return true;\n            } \n        }\n\n        Pile.prototype.maybeAddCards = function(move) {\n            var pile = this;\n\n            // Allow if:\n            // 1) 'move' contains cards\n            // 2) The resulting pile satisifes the pile criteria\n            // 3) If moving to a pile with no cards, must start with king\n            if (move.cards.length > 0\n                && cardsMeetPileCriteria(pile.cards.concat(move.cards))\n                && (move.cards[0].rank === sampleCard.maxRank\n                    || pile.cards.length > 0)) {\n                move.cards.forEach(function(card) {\n                    card.location = pile;\n                })\n                pile.cards = pile.cards.concat(move.cards);\n                move.onMove();\n                return true;\n            }\n            else {\n                move.onReturn();\n                return false;\n            }\n        }\n\n        return Pile;\n    }]);\n\n    app.directive('pile', function() {\n        var link = function(scope, element, attrs) {\n            $(element).droppable({\n                drop: function(event, ui) {\n                    scope.$emit('cardDrop', ui.draggable.attr(\"id\"),\n                        \"pile-\" + scope.pile.id);\n                }\n            });\n        };\n\n        return {\n            link: link,\n            replace: true,\n            restrict: 'E',\n            scope: {\n                pile: '='\n            },\n            templateUrl: 'app/pile/pile.html'\n        };\n    });\n})();\n","(function() {\n    var app = angular.module('waste', []);\n\n    app.factory('Waste', ['Card', function(Card) {\n        var Waste = function() {\n            //end of array is top of waste\n            this.cards = [];\n            this.lock = false;\n        };\n\n        Waste.prototype.maybeRemoveCards = function(card) {\n            var waste = this;\n            if (waste.lock) {\n                throw \"Waste waiting for card removal to be completed.\";\n            }\n\n            var move = {\n                cards: [],\n                onMove: function() {},\n                onReturn: function() {}\n            };\n\n            if (waste.cards.length === 0 || !card) {\n                return move;\n            }\n\n            if (card === waste.cards[waste.cards.length - 1]) {\n                waste.lock = true;\n                move.cards.push(waste.cards[waste.cards.length - 1]);\n                move.onMove = function() {\n                    waste.cards.pop();\n                    waste.lock = false;\n                };\n                move.onReturn = function() {\n                    waste.lock = false;\n                }\n            }\n            else if (card === waste.cards[0]) {\n                waste.lock = true;\n                move.cards = waste.cards.slice();\n                move.onMove = function() {\n                    waste.cards = [];\n                    waste.lock = false;\n                }\n                move.onReturn = function() {\n                    waste.lock = false;\n                }\n            }\n\n            return move;\n        }\n\n        Waste.prototype.maybeAddCards = function(move) {\n            if (move.cards.length === 1) {\n                this.cards.push(move.cards[0]);\n                move.cards[0].location = this;\n                move.onMove();\n                return true;\n            }\n            else {\n                move.onReturn();\n                return false;\n            }\n        }\n\n        return Waste;\n    }]);\n\n    app.directive('waste', function() {\n        return {\n            replace: true,\n            restrict: 'E',\n            scope: {\n                waste: '='\n            },\n            templateUrl: 'app/waste/waste.html'\n        };\n    });\n})();\n"]}